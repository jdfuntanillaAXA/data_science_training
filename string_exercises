def donuts(count):
    if count < 10:
        return 'Number of donuts: {}'.format(count)
    else:
        return 'Number of donuts: many'
    
 def both_ends(s):
    if len(s)>=2:
        return s[:2] + s[-2:]
    else:
        return ' '
        
def fix_start(s):
    first = s[0]
    return first + s[1:].replace(first, "*")
    
def mix_up(a,b):
    a2 = b[:2] + a[2:]
    b2 = a[:2] + b[2:]
    return "{} {}".format(a2,b2)
    
def test(got, expected):
    prefix = 'OK' if got == expected else ' X'
    print ' {} got: {!r} expected: {!r}'.format(prefix, got, expected)

def main():
    print 'donuts'
    # Each line calls donuts, compares its result to the expected for that call.
    test(donuts(4), 'Number of donuts: 4')
    test(donuts(9), 'Number of donuts: 9')
    test(donuts(10), 'Number of donuts: many')
    test(donuts(99), 'Number of donuts: many')

    print
    print 'both_ends'
    test(both_ends('spring'), 'spng')
    test(both_ends('Hello'), 'Helo')
    test(both_ends('a'), '')
    test(both_ends('xyz'), 'xyyz')

  
    print
    print 'fix_start'
    test(fix_start('babble'), 'ba**le')
    test(fix_start('aardvark'), 'a*rdv*rk')
    test(fix_start('google'), 'goo*le')
    test(fix_start('donut'), 'donut')

    print
    print 'mix_up'
    test(mix_up('mix', 'pod'), 'pox mid')
    test(mix_up('dog', 'dinner'), 'dig donner')
    test(mix_up('gnash', 'sport'), 'spash gnort')
    test(mix_up('pezzy', 'firm'), 'fizzy perm')

main()

def verbing(s):
    if len(s)>=3:
        if s[-3] != 'ing':
            s += 'ing'
        else:
            s += 'ly'
    return s
    
def not_bad(s):
    find_not = s.find('not')
    find_bad = s.find('bad')
    if find_not != -1 and find_bad != -1 and find_bad > find_not:
        s = s[:find_not] + 'good' + s[find_bad+3:]
    return s
    
 def front_back(a,b):
    a_mid = (len(a)+1)/2
    b_mid = (len(b)+1)/2
    return '{} {} {} {}'.format(a[:a_mid],b[:b_mid],a[a_mid:],b[b_mid:])
    
    
